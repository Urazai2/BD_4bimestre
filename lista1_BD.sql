USE db_atividade_view;

SELECT *
FROM ALUNO;

SELECT *
FROM CURSO;

SELECT *
FROM DISCIPLINA;

SELECT *
FROM MATRICULA;

SELECT *
FROM PROFESSOR;

SELECT *
FROM TURMA;

-- 1
CREATE VIEW ALUNOS_COMPL AS
SELECT DISTINCT ALUNO.NOME  AS ALUNO,
DISCIPLINA.NOME AS DISCIPLINA,
CURSO.NOME AS CURSO
FROM MATRICULA
INNER JOIN ALUNO ON
ALUNO.ID_ALUNO = MATRICULA.ID_ALUNO
INNER JOIN DISCIPLINA ON
DISCIPLINA.ID_DISCIPLINA = MATRICULA.ID_DISCIPLINA
INNER JOIN CURSO ON
CURSO.ID_CURSO = DISCIPLINA.ID_CURSO
;
-- 2
CREATE VIEW TOTAL_ALUNOS AS
SELECT DISCIPLINA.NOME AS DISCIPLINA,
COUNT(ALUNO.ID_ALUNO) AS TOTAL_ALUNOS
FROM MATRICULA
INNER JOIN ALUNO ON
ALUNO.ID_ALUNO = MATRICULA.ID_ALUNO
INNER JOIN DISCIPLINA ON
DISCIPLINA.ID_DISCIPLINA = MATRICULA.ID_DISCIPLINA
GROUP BY DISCIPLINA.NOME
;
-- 3
CREATE VIEW STATUS_DISCIPLINAS AS
SELECT ALUNO.NOME AS ALUNO,
DISCIPLINA.NOME AS DISCIPLINA,
MATRICULA.STATUS
FROM MATRICULA
INNER JOIN ALUNO ON
ALUNO.ID_ALUNO = MATRICULA.ID_ALUNO
INNER JOIN DISCIPLINA ON
DISCIPLINA.ID_DISCIPLINA = MATRICULA.ID_DISCIPLINA
INNER JOIN CURSO ON
CURSO.ID_CURSO = DISCIPLINA.ID_CURSO
;
-- 4
CREATE VIEW PROFESSOR_COMPL AS
SELECT PROFESSOR.NOME AS PROFESSOR,
DISCIPLINA.NOME AS DISCIPLINA,
TURMA.HORARIO
FROM TURMA
INNER JOIN PROFESSOR ON
PROFESSOR.ID_PROFESSOR = TURMA.ID_PROFESSOR
INNER JOIN DISCIPLINA ON
DISCIPLINA.ID_DISCIPLINA = TURMA.ID_DISCIPLINA
;
-- 5

SELECT NOME,
DATA_NASCIMENTO
FROM ALUNO
WHERE (DATEDIFF(CURDATE(), DATA_NASCIMENTO) /365) > 20
;
-- 6
CREATE VIEW CURSO_COMPL AS
SELECT CURSO.NOME  AS CURSO,
COUNT(DISCIPLINA.ID_DISCIPLINA) AS TOTAL_DISC,
CURSO.CARGA_HORARIA
FROM CURSO
INNER JOIN DISCIPLINA ON
 DISCIPLINA.ID_CURSO = CURSO.ID_CURSO
GROUP BY CURSO.NOME,
 CURSO.CARGA_HORARIA
;
-- 7
CREATE VIEW PROFESSOR_ESP AS
SELECT NOME,
ESPECIALIDADE
FROM PROFESSOR
;
-- 8
CREATE VIEW ALUNOS_MULTIDISCIPLINA AS
SELECT ALUNO.NOME
FROM MATRICULA
INNER JOIN ALUNO ON
ALUNO.ID_ALUNO = MATRICULA.ID_ALUNO
GROUP BY ALUNO.NOME
HAVING COUNT(MATRICULA.ID_DISCIPLINA) > 1
;
-- 9
CREATE VIEW CONCLUIDOS AS
SELECT ALUNO.NOME,
COUNT(MATRICULA.STATUS)
FROM MATRICULA
INNER JOIN ALUNO ON
ALUNO.ID_ALUNO = MATRICULA.ID_ALUNO
WHERE MATRICULA.STATUS LIKE ("C%")
GROUP BY ALUNO.NOME
;
-- 10
CREATE VIEW TURMAS_SEMESTRE AS
SELECT ID_TURMA
FROM TURMA
WHERE SEMESTRE LIKE '2024.1'
;
-- 11
CREATE VIEW TRANCADAS AS
SELECT ALUNO.NOME
FROM MATRICULA
INNER JOIN ALUNO ON
ALUNO.ID_ALUNO = MATRICULA.ID_ALUNO
WHERE MATRICULA.STATUS LIKE ("T%")
GROUP BY ALUNO.NOME
;
-- 12
CREATE VIEW DISC_SEM_MATRICULAS AS
SELECT DISCIPLINA.NOME
FROM DISCIPLINA
LEFT JOIN MATRICULA ON
MATRICULA.ID_DISCIPLINA = DISCIPLINA.ID_DISCIPLINA
WHERE MATRICULA.ID_DISCIPLINA IS NULL
;
-- 13
CREATE VIEW CONTROLE_STATUS_MATRICULA AS
SELECT STATUS,
COUNT(ID_ALUNO) AS QNT_ALUNO
FROM MATRICULA
GROUP BY        STATUS
;
-- 14
CREATE VIEW CONTROLE_PROF AS
SELECT ESPECIALIDADE,
COUNT(ID_PROFESSOR) AS QNT_PROF
FROM PROFESSOR
GROUP BY ESPECIALIDADE
;
-- 15
CREATE VIEW ALUNO_IDADE AS
SELECT NOME,
FORMAT((DATEDIFF(CURDATE(), DATA_NASCIMENTO) /365), 0) AS IDADE
FROM ALUNO
;
-- 16
CREATE VIEW ULTIMA_MATRICULA_ALUNO AS
SELECT ALUNO.NOME,
MAX(MATRICULA.DATA_MATRICULA) AS ULT_MATRICULA
FROM MATRICULA
INNER JOIN ALUNO ON
ALUNO.ID_ALUNO = MATRICULA.ID_ALUNO
GROUP BY ALUNO.NOME
;
-- 17
CREATE VIEW DISCIPLINA_CURSO AS
SELECT DISCIPLINA.NOME AS DISC,
CURSO.NOME AS CURSO
FROM DISCIPLINA
INNER JOIN CURSO ON
CURSO.ID_CURSO = DISCIPLINA.ID_CURSO
WHERE CURSO.NOME LIKE 'Engenharia de Software'
;
-- 18
CREATE  VIEW PROFESSORES_SEM_AULA AS
SELECT PROFESSOR.NOME
FROM TURMA
LEFT JOIN PROFESSOR ON
PROFESSOR.ID_PROFESSOR = TURMA.ID_PROFESSOR
WHERE PROFESSOR.ID_PROFESSOR IS NULL
;
-- 19
CREATE VIEW ALUNO_FILTRADA AS
SELECT NOME,
CPF,
 EMAIL
FROM ALUNO;
;
-- 20
CREATE VIEW QNT_DISC_PROF AS
SELECT PROFESSOR.NOME AS PROFESSOR,
COUNT(ID_DISCIPLINA) AS QNT_DISC
FROM PROFESSOR
INNER JOIN TURMA ON
TURMA.ID_PROFESSOR = PROFESSOR.ID_PROFESSOR
GROUP BY PROFESSOR.NOME
;